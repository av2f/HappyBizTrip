{% extends 'base.html.twig' %}

{% form_theme form 'partials/_profileChoice.html.twig' %}

{# use macro to customize the render of the form #}
{% import 'macros/formRender.html.twig' as fieldRender %}

{% block title %}{{ 'profile.block_title'|trans }}{% endblock %}
{% block stylesheets %}
    {{ parent() }}
    {{ encore_entry_link_tags('css/profile') }}
    {{ encore_entry_link_tags('css/datepicker/datepicker') }}
{% endblock %}

{% block body %}
    <div class="container">
        {# modal window to update avatar #}
        {% include 'partials/modals/_modalUpdateAvatar.html.twig' %}
        
        {# modal window to confirm deletion of account #}
        {% include 'partials/modals/_modalDeleteProfile.html.twig' %}
        
        <div class="d-flex justify-content-center pt-2">
            <div class="card card-profile">
                <div class="card-header card-profile-header-avatar" data-toggle="modal" data-target="#avatarProfileModal">
                    <div class="update-avatar">
                        <img src={% if user.avatar is empty %}"{{ asset('img/library/defaultAvatar.png') }}"{% else %} "{{ user.avatar }}" {% endif %}
                        class="avatar avatar-large img-avatar" id="imgAvatarProfile" alt="Avatar de {{ user.pseudo }}" >
                        <div class="icon-edit">
                            <div class="update-icon-avatar"><i class="far fa-edit"></i></div>
                        </div>
                        <input type="hidden" id="input-update-avatar" name="token" value="{{ csrf_token('update-avatar') }}"
                        data-ref="{{ path('update_avatar', {'id':user.id}) }}" />
                    </div>
                </div>
            </div>
        </div>

        {# profile form #}
        {{ form_start(form, {'attr': {'novalidate': 'novalidate'}}) }}
            <div class="d-flex justify-content-center pt-2">
                <div class="card card-profile mt-2">
                    <div class="card-header text-left" style="font-size: 1rem"><i class="far fa-address-card"></i>  {{ 'profile.title.general_infos'|trans }}</div>
                    <div class="card-body text-left">
                        {{ form_widget(form.gender) }}
                        {{ form_widget(form.situation) }}
                        {{ fieldRender.formFieldRender('pseudo', form.pseudo) }}
                        {{ form_row(form.firstName) }}
                        {{ form_row(form.lastName) }}
                        {{ fieldRender.formFieldRender('email', form.email) }}
                        {{ fieldRender.formDateRender('birthDate', form.birthDate) }}
                        {{ form_row(form.profession) }}
                        {{ form_row(form.company) }}
                    </div>
                </div>
            </div>
            <div class="d-flex justify-content-center pt-2">
                <div class="card mt-2 card-profile">
                    <div class="card-header text-left"><i class="fas fa-user-edit"></i>  {{ 'profile.title.description'|trans }}</div>
                    <div class="card-body text-left">
                        {{ form_widget(form.description)}}
                    </div>
                </div>
            </div>
            <div class="d-flex justify-content-center pt-2">
                <div class="card mt-2 card-profile">
                    <div class="card-header text-left"><i class="fab fa-wpexplorer"></i>  {{ 'profile.title.interests'|trans }}</div>
                    <div class="card-body text-left">
                        <h4 class="card-title">Primary card title</h4>
                        <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                    </div>
                </div>
            </div>
            <div class="d-flex justify-content-center pt-2">
                <button type="submit" class="btn btn-profile-update btn-sm mr-2 shadow-none"><i class="far fa-edit"></i>  {{ 'profile.btn_update'|trans }}</button>
                <button type="button" id="btn-profile-delete" class="btn btn-profile-delete btn-sm shadow-none" data-toggle="modal" data-target="#deleteProfileModal">
                    <i class="far fa-trash-alt"></i>  {{ 'profile.btn_delete'|trans }}
                </button>
            </div>
        {{ form_end(form) }}
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {{ encore_entry_script_tags('js/datepicker/datepicker') }}
    {% if app.request.locale == 'fr' %}
        {{ encore_entry_script_tags('js/datepicker/datepicker-fr') }}
    {% endif %}
    {# management of datepicker options #}
    {% include 'partials/_datepickerManagement.html.twig' %}
    <script>

        document.getElementById('btnDelAvatar').addEventListener('click', function() {
            // if delete image, replace it by default avatar image
            fileAvatar = "{{ asset('img/library/defaultAvatar.png') }}"
            document.getElementById("imgModalAvatar").setAttribute('src', fileAvatar)
        })

        const fileInput = document.getElementById("uploadFile")

        // if click on change button
        document.getElementById("btnChangeAvatar").addEventListener("click", function() {
            fileInput.click()
        })

         // if new image upload
         // *** manage upload new file *** 
        //const fileInput = document.getElementById("uploadFile")
        fileInput.addEventListener("change", function(e) {
            // if file choosen
            fileAvatar = this.files[0];
            file2 = e.target.files
            console.log(fileAvatar)
            console.log(file2)
            if (fileAvatar) {
                const reader = new FileReader();
                reader.addEventListener("load", function() {
                    document.getElementById("imgModalAvatar").setAttribute('src', this.result)
                })
                reader.readAsDataURL(fileAvatar)
            }
        })
        $('#avatarProfileModal').on('hide.bs.modal', function () {
            // if image change
            let imgModalAvatar = document.getElementById("imgModalAvatar").getAttribute('src')
            if (document.getElementById("imgAvatarProfile").getAttribute('src') != imgModalAvatar)
            {
                console.log(fileAvatar['name'])
                // Send new image by json to update
                let inputUpdateAvatar = document.getElementById("input-update-avatar")
                // let img = document.getElementById("imgAvatarProfile").getAttribute('src')
                fetch(inputUpdateAvatar.getAttribute("data-ref"), {
                    method: "POST",
                    headers: {
                        "X-Request-With": "XMLHttpRequest",
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        "token": inputUpdateAvatar.value,
                        "newAvatar": fileAvatar
                    })

                })
                .then(function(response) {
                    // retrieve the response in json
                    return response.json()
                })
                .then (data => {
                    console.log(data)
                    if(!data.success) {
                        toastMsg("error", "votre image n'a pas pu être modifiée.Merci de rééesayer plus tard")
                    }
                    else {
                        // Replace image of avatar in profile form
                        document.getElementById("imgAvatarProfile").setAttribute('src', imgModalAvatar)
                        document.getElementById("imgAvatarNav").setAttribute('src', imgModalAvatar)
                    }
                })
                .catch(e => toastMsg("error", "Une erreur est survenue lors de la modification de l'image.\n Merci de réessayer ultérieurement","4000"))
            }
        })

        $('#deleteProfileModal').on('hidden.bs.modal', function () {
            $('#btn-profile-delete').focus(function() {
                // position at top of the page
               $('html,body').animate({scrollTop: 0}, 200)
            })
        })

        // *** end manage upload new file ***
        // Display error message
        function toastMsg(criticity, message, timeout) {
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": false,
                "progressBar": true,
                "positionClass": "toast-top-left",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": timeout,
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "slideUp",
                'escapeHtml': true
            }
            toastr[criticity](message)
        }
    </script>
{% endblock %}